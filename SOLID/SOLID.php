<?php

/* SOLID — мнемонический акроним, введённый Майклом Фэзерсом (Michael Feathers) для первых пяти принципов, названных Робертом Мартином в начале 2000-х, которые означали ПЯТЬ ОСНОВНЫХ ПРИНЦИПОВ ООП И ПРОЕКТИРОВАНИЯ. */



/* S - Принцип единственной ответственности */
// Каждый объект должен иметь только одну обязанность и она должна быть полностью инкапсулированна в класс.


/* O - Принцип Открытости/Закрытости */
// Классы должны быть открыты для расширения и закрыты для модификации.


/* L - Принцип подстановки Барбары Лисков */
// Функции, которые используют базовый тип, должны иметь возможность использовать подтипы базового типа, не зная об этом.
// Поведение наследующих классов не должно противоречить поведению заданному родительским классом.


/* I - Принцип разделения интерфейсов */
// Классы не должны зависеть от интерфейсов, которые они не используют.
// Много специализированных интерфейсов лучше, чем один универсальный.


/* D - Принцип инверсии зависимостей */
// Верхнеуровневые сущности не должны зависить от нижнеуровневых реализаций а любые зависимости лучше выносить в абстракции
